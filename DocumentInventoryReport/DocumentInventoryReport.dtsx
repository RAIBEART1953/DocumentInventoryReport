<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/5/2019 10:34:05 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="HOU-IT-RSTEWART"
  DTS:CreatorName="HOU-IT-RSTEWART\rstewart"
  DTS:DTSID="{11150033-94F2-4C8C-86D6-E293EE92D29E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1033"
  DTS:ObjectName="DocumentInventoryReport"
  DTS:PackageType="5"
  DTS:VersionBuild="24"
  DTS:VersionGUID="{D9607BC0-370C-457B-8FD1-91C8EA603C6C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BF_Redsift_Prod.rstewart]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{FBF4E94B-6171-44FB-85AD-A151C98BA89E}"
      DTS:ObjectName="BF_Redsift_Prod.rstewart">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="uid=rstewart;Dsn=RedshiftProd32;">
          <DTS:Password
            DTS:Name="pwd"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAwBOuxLnrgECzQK6HR+NDbwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACaLjZ9tzGa/IP7AUFrS3vS+gvs8umL/yoYSoKr6Pg/CwAAAAAOgAAAAAIAACAAAACCWYvHP7TMwb5TyBDwTl5aYPy1tTSvUypieSKoZYYupyAAAABlR984YZUK0eXl7ao5WeV499bep4xathqCEi/Cf3IWhEAAAADNLaGeI1DddaVQuh6tDr25RshRxvDdMtdWp2jPQDqfCy1MuzfkroWxAbm5tO3cGE9IZ2PaifhdMieA070br2MB</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DocumentInventory_DEST]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{3EC678E1-A7C8-42F8-B2F5-EE2CD8F85CBB}"
      DTS:ObjectName="DocumentInventory_DEST">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\SSIS_Projects\SSIS_Outputs\Export\MissingDocumentInventory_AgentManager.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DocumentInventory_SOURCE]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{53D87A38-3A16-4E57-B6FC-E88A04CCD884}"
      DTS:ObjectName="DocumentInventory_SOURCE">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\SSIS_Projects\SSIS_Templates\MissingDocuments\MissingDocumentInventory.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{18643944-25E8-4DC2-BC40-2A10654C536D}"
      DTS:ObjectName="HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=EC2AMAZ-GQJ0QHR\SQL2017_SSIS;Initial Catalog=BF_Redshift_Staging;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP_BF]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{99AF04A9-8BD5-4BCE-AADF-1FD4038FE68A}"
      DTS:ObjectName="SMTP_BF">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtp.gmail.com;UseWindowsAuthentication=True;EnableSsl=True;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9C9CAB8B-747E-4CA9-85AC-E0E1644DFE76}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="strErrorMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear STG for new inventory"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A01C4D52-33BF-452B-A028-9273942C7626}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear STG for new inventory"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{18643944-25E8-4DC2-BC40-2A10654C536D}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE &#xA;stg_ClearOne_MissingData;&#xA;&#xA;TRUNCATE TABLE &#xA;[dbo].[stg_AllPrograms];" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Agent and Manager Data from Excel into STG"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{EF6AF011-D00A-4E77-BB47-FCD957C77F89}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Agent and Manager Data from Excel into STG"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DocumentInventory_SOURCE]"
                  connectionManagerRefId="Package.ConnectionManagers[DocumentInventory_SOURCE]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ProgramID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProgramID]"
                      length="255"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ProgramID]"
                      name="ProgramID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ImportDate]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImportDate]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ImportDate]"
                      name="ImportDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Enrollment_Package]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[Enrollment_Package]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Enrollment_Package]"
                      name="Enrollment_Package"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[IsBeyondContract]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[IsBeyondContract]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[IsBeyondContract]"
                      name="IsBeyondContract"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ATC_POA]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[ATC_POA]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ATC_POA]"
                      name="ATC_POA"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Credit_Pull_Auth]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[Credit_Pull_Auth]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Credit_Pull_Auth]"
                      name="Credit_Pull_Auth"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[SPAA]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[SPAA]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[SPAA]"
                      name="SPAA"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Docusign_Certificate]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[Docusign_Certificate]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Docusign_Certificate]"
                      name="Docusign_Certificate"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[ProgramID]"
                      dataType="wstr"
                      length="255"
                      name="ProgramID" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImportDate]"
                      dataType="r8"
                      name="ImportDate" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[Enrollment_Package]"
                      dataType="bool"
                      name="Enrollment_Package" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[IsBeyondContract]"
                      dataType="bool"
                      name="IsBeyondContract" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[ATC_POA]"
                      dataType="bool"
                      name="ATC_POA" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[Credit_Pull_Auth]"
                      dataType="bool"
                      name="Credit_Pull_Auth" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[SPAA]"
                      dataType="bool"
                      name="SPAA" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].ExternalColumns[Docusign_Certificate]"
                      dataType="bool"
                      name="Docusign_Certificate" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ProgramID]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ProgramID]"
                      name="ProgramID" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ImportDate]"
                      dataType="r8"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ImportDate]"
                      name="ImportDate" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[Enrollment_Package]"
                      dataType="bool"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[Enrollment_Package]"
                      name="Enrollment_Package" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[IsBeyondContract]"
                      dataType="bool"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[IsBeyondContract]"
                      name="IsBeyondContract" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ATC_POA]"
                      dataType="bool"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ATC_POA]"
                      name="ATC_POA" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[Credit_Pull_Auth]"
                      dataType="bool"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[Credit_Pull_Auth]"
                      name="Credit_Pull_Auth" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[SPAA]"
                      dataType="bool"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[SPAA]"
                      name="SPAA" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[Docusign_Certificate]"
                      dataType="bool"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[Docusign_Certificate]"
                      name="Docusign_Certificate" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Agent and Manager Data from Excel into STG\Lookup"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[stg_AllPrograms]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[stg_AllPrograms]) [refTable]
where [refTable].[clietnid] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="clietnid" dataType="DT_WSTR" length="20" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="agentname" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="salesmanager" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ProgramID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
                  connectionManagerRefId="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Inputs[Lookup Input].Columns[ProgramID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ProgramID"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ProgramID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">clietnid</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Match Output].Columns[agentname]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Match Output].Columns[agentname]"
                      name="agentname"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">agentname</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Match Output].Columns[salesmanager]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Match Output].Columns[salesmanager]"
                      name="salesmanager"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">salesmanager</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              validateExternalMetadata="False"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[stg_ClearOne_MissingData]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
                  connectionManagerRefId="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProgramID]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ProgramID"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProgramID]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ProgramID]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ImportDate]"
                      cachedDataType="r8"
                      cachedName="ImportDate"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ImportDate]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ImportDate]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Enrollment_Package]"
                      cachedDataType="bool"
                      cachedName="Enrollment_Package"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Enrollment_Package]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Enrollment_Package]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IsBeyondContract]"
                      cachedDataType="bool"
                      cachedName="IsBeyondContract"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsBeyondContract]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[IsBeyondContract]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ATC_POA]"
                      cachedDataType="bool"
                      cachedName="ATC_POA"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATC_POA]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[ATC_POA]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Credit_Pull_Auth]"
                      cachedDataType="bool"
                      cachedName="Credit_Pull_Auth"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Credit_Pull_Auth]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Credit_Pull_Auth]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SPAA]"
                      cachedDataType="bool"
                      cachedName="SPAA"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SPAA]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[SPAA]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Docusign_Certificate]"
                      cachedDataType="bool"
                      cachedName="Docusign_Certificate"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Docusign_Certificate]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output].Columns[Docusign_Certificate]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[agentname]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="agentname"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SalesAgent]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Match Output].Columns[agentname]" />
                    <inputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[salesmanager]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="salesmanager"
                      externalMetadataColumnId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SalesAgentManager]"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Match Output].Columns[salesmanager]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProgramID]"
                      dataType="wstr"
                      length="20"
                      name="ProgramID" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ImportDate]"
                      dataType="dbDate"
                      name="ImportDate" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Enrollment_Package]"
                      dataType="bool"
                      name="Enrollment_Package" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IsBeyondContract]"
                      dataType="bool"
                      name="IsBeyondContract" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ATC_POA]"
                      dataType="bool"
                      name="ATC_POA" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Credit_Pull_Auth]"
                      dataType="bool"
                      name="Credit_Pull_Auth" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SPAA]"
                      dataType="bool"
                      name="SPAA" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Docusign_Certificate]"
                      dataType="bool"
                      name="Docusign_Certificate" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SalesAgent]"
                      dataType="wstr"
                      length="50"
                      name="SalesAgent" />
                    <externalMetadataColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SalesAgentManager]"
                      dataType="wstr"
                      length="50"
                      name="SalesAgentManager" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Get Agent and Manager Data from Excel into STG.Paths[Excel Source Output]"
              endId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Inputs[Lookup Input]"
              name="Excel Source Output"
              startId="Package\Get Agent and Manager Data from Excel into STG\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Get Agent and Manager Data from Excel into STG.Paths[Lookup Match Output]"
              endId="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Lookup Match Output"
              startId="Package\Get Agent and Manager Data from Excel into STG\Lookup.Outputs[Lookup Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{885AD2DB-E39D-4263-B15E-19EB9B1E78F8}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Recreate List of All programs with Sales Agent and Sales Agent Manager"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source"
              componentClassID="Attunity.SSISODBCSrc"
              description="ODBC Source"
              name="ODBC Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.String"
                  description="The name of the table to be fetched."
                  expressionType="Notify"
                  name="TableName"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT cast(p.name as varchar(20))                             as ProgramID
     , cast(p.salesperson__c as varchar(50))                   as ExternalSalesAgent
     , cast(mgr.firstname + ' ' + mgr.lastname as varchar(50)) AS ExternalSalesAgentMgr
FROM datalake_sf.sf_nu_dse_program_c_src p
         inner join datalake_sf.sf_user_src u on p.salesperson_id__c = u.id
         left outer join datalake_sf.sf_user_src mgr on u.beyond_manager__c = mgr.id
WHERE p.enrolled_state__c IN ('PA', 'ID', 'UT', 'MS', 'TN', 'IA', 'NV', 'LA')
order by cast(p.name as varchar(20))</property>
                <property
                  dataType="System.Int32"
                  description="Specify the number of rows fetched per batch."
                  expressionType="Notify"
                  name="BatchSize">1000</property>
                <property
                  dataType="System.Int32"
                  description="Determines the chunk size allocation for LOB columns"
                  expressionType="Notify"
                  name="LobChunkSize">32768</property>
                <property
                  dataType="System.Boolean"
                  description="Determines how the component exposes CHAR columns. If False, CHAR columns are exposed as (multi-)byte strings (DT_STR), if True, CHAR columns are exposed as wide strings (DT_WSTR)"
                  expressionType="Notify"
                  name="ExposeCharColumnsAsUnicode">false</property>
                <property
                  dataType="System.Int32"
                  description="The number of seconds to wait for an SQL statement to execute before returning to the application."
                  expressionType="Notify"
                  name="StatementTimeout">0</property>
                <property
                  dataType="System.Int32"
                  description="The code page to use when code page information is unavailable from the data source."
                  expressionType="Notify"
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Int32"
                  description="The method used for fetching data."
                  expressionType="Notify"
                  name="FetchMethod">1</property>
                <property
                  dataType="System.Int32"
                  description="The ODBC C data type for binding numeric data."
                  expressionType="Notify"
                  name="BindNumericAs">0</property>
                <property
                  dataType="System.Int32"
                  description="Determines how the component would bind columns of (multi)-byte string types (i.e., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). The options are: Unicode (SQL_C_WCHAR) and ANSI (SQL_C_CHAR)."
                  expressionType="Notify"
                  name="BindCharColumnsAs">0</property>
                <property
                  dataType="System.Int32"
                  description="The mode used to access the database."
                  expressionType="Notify"
                  name="AccessMode"
                  typeConverter="AccessMode">1</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Connections[ODBCConnection]"
                  connectionManagerID="Package.ConnectionManagers[BF_Redsift_Prod.rstewart]"
                  connectionManagerRefId="Package.ConnectionManagers[BF_Redsift_Prod.rstewart]"
                  description="The ODBC runtime connection used to access the database."
                  name="ODBCConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output]"
                  errorRowDisposition="FailComponent"
                  name="ODBC Source Output"
                  truncationRowDisposition="FailComponent">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[programid]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[programid]"
                      length="20"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[programid]"
                      name="programid" />
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[externalsalesagent]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[externalsalesagent]"
                      length="50"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[externalsalesagent]"
                      name="externalsalesagent" />
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[externalsalesagentmgr]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[externalsalesagentmgr]"
                      length="50"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[externalsalesagentmgr]"
                      name="externalsalesagentmgr" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[programid]"
                      dataType="wstr"
                      length="20"
                      name="programid" />
                    <externalMetadataColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[externalsalesagent]"
                      dataType="wstr"
                      length="50"
                      name="externalsalesagent" />
                    <externalMetadataColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[externalsalesagentmgr]"
                      dataType="wstr"
                      length="50"
                      name="externalsalesagentmgr" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output]"
                  isErrorOut="true"
                  name="ODBC Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[programid]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[programid]"
                      length="20"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[programid]"
                      name="programid" />
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[externalsalesagent]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[externalsalesagent]"
                      length="50"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[externalsalesagent]"
                      name="externalsalesagent" />
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[externalsalesagentmgr]"
                      dataType="wstr"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].ExternalColumns[externalsalesagentmgr]"
                      length="50"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[externalsalesagentmgr]"
                      name="externalsalesagentmgr" />
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[stg_AllPrograms]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
                  connectionManagerRefId="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[programid]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="programid"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[clietnid]"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[programid]" />
                    <inputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[externalsalesagent]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="externalsalesagent"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[agentname]"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[externalsalesagent]" />
                    <inputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[externalsalesagentmgr]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="externalsalesagentmgr"
                      externalMetadataColumnId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[salesmanager]"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output].Columns[externalsalesagentmgr]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[clietnid]"
                      dataType="wstr"
                      length="20"
                      name="clietnid" />
                    <externalMetadataColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[agentname]"
                      dataType="wstr"
                      length="50"
                      name="agentname" />
                    <externalMetadataColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[salesmanager]"
                      dataType="wstr"
                      length="50"
                      name="salesmanager" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager.Paths[ODBC Source Output]"
              endId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="ODBC Source Output"
              startId="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source.Outputs[ODBC Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send Mail thru Gmail"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{CBF7DD7A-5191-411A-8306-27B8A5F56482}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send Mail thru Gmail"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4a5248d1411d4bf99520aace9360450c"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::strErrorMessage">
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Text;
using System.Net.Mail;
using System.Net;
#endregion

namespace ST_4a5248d1411d4bf99520aace9360450c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                var client = new SmtpClient("smtp.gmail.com", 587)
                {
                    Credentials = new NetworkCredential("Beyond.Finance.SSIS@gmail.com", "B3y0ndF1nanc3"),
                    EnableSsl = true
                };
                MailMessage m = new MailMessage();
                m.From = new MailAddress("Beyond.Finance.SSIS@gmail.com");
                m.To.Add("rstewart@beyondfinance.com");
                m.To.Add("syorke@beyondfinance.com");
                m.Subject = "Document Inventory with Agent and Manager - Cloud SSIS package TEST";
                m.Body = "Attached is the document inventory with the agent and manager.";
                System.Net.Mail.Attachment attachment;
                attachment = new Attachment(@"C:\SSIS_Projects\SSIS_Outputs\Export\MissingDocumentInventory_AgentManager.xls");
                m.Attachments.Add(attachment);

                client.Send(m);
            }
            catch(Exception e)
            {
                Dts.Variables["strErrorMessage"].Value = e.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4a5248d1411d4bf99520aace9360450c.Properties.Settings.get_Default():ST_4a5248d1411d4bf99520aace9360450c.Properties.Sett" +
    "ings")]

namespace ST_4a5248d1411d4bf99520aace9360450c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_4a5248d1411d4bf99520aace9360450c.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{11989f6a-e839-4ecf-af99-6731b49afe55}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4a5248d1411d4bf99520aace9360450c</RootNamespace>
    <AssemblyName>ST_4a5248d1411d4bf99520aace9360450c</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_4a5248d1411d4bf99520aace9360450c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_4a5248d1411d4bf99520aace9360450c</msb:DisplayName>
    <msb:ProjectId>{5104752D-D844-4018-8D38-DE14110FBF16}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4a5248d1411d4bf99520aace9360450c.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4a5248d1411d4bf99520aace9360450c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4a5248d1411d4bf99520aace9360450c")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4a5248d1411d4bf99520aace9360450c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4a5248d1411d4bf99520aace9360450c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4a5248d1411d4bf99520aace9360450c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4a5248d1411d4bf99520aace9360450c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4a5248d1411d4bf99520aace9360450c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4a5248d1411d4bf99520aace9360450c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJa0SV0AAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAA1jIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIQyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA3BIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC4
MgAAAAAAAEgAAAACAAUAqCEAACQQAAABAAAAAAAAAMwxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBADSAAAAAQAAEXIBAABwIEsCAABzEAAACiVyHwAAcHJb
AABwcxEAAApvEgAACiUXbxMAAApzFAAACgoGch8AAHBzFQAACm8WAAAKBm8XAAAKcncAAHBvGAAA
CgZvFwAACnKtAABwbxgAAAoGct8AAHBvGQAACgZyaAEAcG8aAAAKcuYBAHBzGwAACgsGbxwAAAoH
bx0AAAoGbx4AAAreLwwCKB8AAApvIAAACnKFAgBwbyEAAAoIbyIAAApvIwAACgIoHwAAChdvJAAA
Ct4AAigfAAAKFm8kAAAKKgAAARAAAAAAAACWlgAvEQAAAR4CKCUAAAoqHgIoJgAACiqufgEAAAQt
HnKlAgBw0AMAAAIoJwAACm8oAAAKcykAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAA
BCoeAigqAAAKKi5zCAAABoADAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAWAQAACN+AADEBAAAjAYAACNTdHJpbmdzAAAAAFALAAAYAwAAI1VTAGgOAAAQAAAAI0dVSUQA
AAB4DgAArAEAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQMAAAD6ATMAFgAAAQAAACcAAAAFAAAABgAA
AAkAAAABAAAAKgAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAABAAAABAAAAAEAAAABAAAA
AADbAwEAAAAAAAYAUwL+BAYA4gL+BAYAnwHrBA8AcgUAAAYAzAFwBAYANgJwBAYAFwJwBAYAyQJw
BAYAcwJwBAYAjAJwBAYA4wFwBAYA/gEQAwoApwJJAwoAHgFJAw4AkADLAw4AVQbLAwYArQQaBAYA
KgQaBAYAggHrBAYAEQYaBAYAzgQeBQYAvgRbBA4AUgG1Aw4AswG1Aw4AOgFGBAYAZwH+BA4ASgbL
Aw4AcgMkBg4AYAYkBg4A3wXLAw4AggTLAw4AmATLAwYAAQCEAwoAowNJAxIAtAXJABIAnADJAAYA
6QAaBAYApQAaBAYAgAZwBAAAAAAOAAAAAAABAAEAAQAQADsERwA5AAEAAQAAABAAJQWBBVEAAQAD
AAABEAC+BYEFZQADAAcAAwEAAPMFAABJAAQACgARAC8ErwARAA4BswARAHQAtwAGBjYAuwBWgNcF
vgBWgO4AvgBQIAAAAACGAEEEBgABAEAhAAAAAIYY3gQGAAEASCEAAAAAgxjeBAYAAQBQIQAAAACT
CMoEwgABAHwhAAAAAJMI9gDHAAEAgyEAAAAAkwgCAcwAAQCLIQAAAACWCC8G0gACAJIhAAAAAIYY
3gQGAAIAmiEAAAAAkRjkBNcAAgAAAAEACgMJAN4EAQARAN4EBgAZAN4ECgApAN4EEAAxAN4EEAA5
AN4EEABBAN4EEABJAN4EEABRAN4EEABZAN4EEABhAN4EEABpAN4EBgCZAN4EBgDBAN4EFQDRAN4E
BgDZAN4EJADhAN4EKgDZAMcFMADZAAMENgB5AN4EBgDxAN4EEAB5ACEEOwB5ALcEQQD5AGsAEAB5
ABgGEAB5AHMGEACBAN4EEAB5AAEGRgAMAGsAVADZAG8AWgBxAOsFYAARAbAFZgAZAREEbACJAIQA
cwAhAQADdwARATsGAQBxAN4EBgChAN4EBgApAbcAfAApAXwGhQCpAN4EiwDJAN4EBgAIABQApQAI
ABgAqgApAHMAEgEuAAsA6gAuABMA8wAuABsAEgEuACMAGwEuACsARAEuADMARAEuADsARAEuAEMA
GwEuAEsASgEuAFMARAEuAFsAYQFDAGMAqgBJAHMAEgFhAHsAqgBjAGsAqgAbAAMAAQAEAAMAAADO
BNsAAAAWAeAAAAAzBuUAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcATAAEgAAAAQAAAPUby3gAAAAA
AABHAAAABAAAAAAAAAAAAAAAkwA+AAAAAAAOAAAAAAAAAAAAAACcACoDAAAAAAQAAAAAAAAAAAAA
AJMAGgQAAAAADgAAAAAAAAAAAAAAnAAXAAAAAAAAAAAAAQAAAC8FAAAFAAIAAAAAQ29sbGVjdGlv
bmAxADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29y
bGliAFNUXzRhNTI0OGQxNDExZDRiZjk5NTIwYWFjZTkzNjA0NTBjAEFkZABTZW5kAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfTWVzc2FnZQBNYWlsTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUA
RmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2Ny
aXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJs
ZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1i
bHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdv
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBzZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMu
VGFza3MuU2NyaXB0VGFzawBOZXR3b3JrQ3JlZGVudGlhbABTeXN0ZW0uQ29sbGVjdGlvbnMuT2Jq
ZWN0TW9kZWwAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFN5c3RlbS5O
ZXQuTWFpbABTVF80YTUyNDhkMTQxMWQ0YmY5OTUyMGFhY2U5MzYwNDUwYy5kbGwAc2V0X0VuYWJs
ZVNzbABnZXRfSXRlbQBTeXN0ZW0Ac2V0X0Zyb20ARW51bQByZXNvdXJjZU1hbgBTY3JpcHRNYWlu
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAE1haWxBZGRyZXNzQ29sbGVjdGlvbgBBdHRhY2htZW50Q29sbGVjdGlvbgBFeGNlcHRpb24A
Z2V0X1RvAEN1bHR1cmVJbmZvAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3Rl
bS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNv
dXJjZXMAU1RfNGE1MjQ4ZDE0MTFkNGJmOTk1MjBhYWNlOTM2MDQ1MGMuUHJvcGVydGllcy5SZXNv
dXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzRhNTI0OGQxNDExZDRiZjk5NTIwYWFj
ZTkzNjA0NTBjLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlh
bHMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0F0dGFjaG1l
bnRzAE9iamVjdABzZXRfU3ViamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVz
dWx0AFNtdHBDbGllbnQAQXR0YWNobWVudABJQ3JlZGVudGlhbHNCeUhvc3QAc2V0X0JvZHkAZ2V0
X0Fzc2VtYmx5AAAAAAAdcwBtAHQAcAAuAGcAbQBhAGkAbAAuAGMAbwBtAAA7QgBlAHkAbwBuAGQA
LgBGAGkAbgBhAG4AYwBlAC4AUwBTAEkAUwBAAGcAbQBhAGkAbAAuAGMAbwBtAAAbQgAzAHkAMABu
AGQARgAxAG4AYQBuAGMAMwAANXIAcwB0AGUAdwBhAHIAdABAAGIAZQB5AG8AbgBkAGYAaQBuAGEA
bgBjAGUALgBjAG8AbQAAMXMAeQBvAHIAawBlAEAAYgBlAHkAbwBuAGQAZgBpAG4AYQBuAGMAZQAu
AGMAbwBtAACAh0QAbwBjAHUAbQBlAG4AdAAgAEkAbgB2AGUAbgB0AG8AcgB5ACAAdwBpAHQAaAAg
AEEAZwBlAG4AdAAgAGEAbgBkACAATQBhAG4AYQBnAGUAcgAgAC0AIABDAGwAbwB1AGQAIABTAFMA
SQBTACAAcABhAGMAawBhAGcAZQAgAFQARQBTAFQAAX1BAHQAdABhAGMAaABlAGQAIABpAHMAIAB0
AGgAZQAgAGQAbwBjAHUAbQBlAG4AdAAgAGkAbgB2AGUAbgB0AG8AcgB5ACAAdwBpAHQAaAAgAHQA
aABlACAAYQBnAGUAbgB0ACAAYQBuAGQAIABtAGEAbgBhAGcAZQByAC4AAICdQwA6AFwAUwBTAEkA
UwBfAFAAcgBvAGoAZQBjAHQAcwBcAFMAUwBJAFMAXwBPAHUAdABwAHUAdABzAFwARQB4AHAAbwBy
AHQAXABNAGkAcwBzAGkAbgBnAEQAbwBjAHUAbQBlAG4AdABJAG4AdgBlAG4AdABvAHIAeQBfAEEA
ZwBlAG4AdABNAGEAbgBhAGcAZQByAC4AeABsAHMAAB9zAHQAcgBFAHIAcgBvAHIATQBlAHMAcwBh
AGcAZQAAcVMAVABfADQAYQA1ADIANAA4AGQAMQA0ADEAMQBkADQAYgBmADkAOQA1ADIAMABhAGEA
YwBlADkAMwA2ADAANAA1ADAAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAAJI2F3jGR2hIj2hjhOouKgYABCABAQgDIAABBSABARERBCABAQ4FIAEBEV0IBwMSPRJB
EkUFIAIBDggFIAIBDg4FIAEBEnUEIAEBAgUgAQESeQQgABJ9BSAAEoCBBxUSgIUBEkEFIAEBEwAF
IAEBEj0FIAASgIkFIAASgI0GIAESgJEcAyAADgQgAQEcCAABEoCVEYCZBSAAEoCdByACAQ4SgJ0I
t3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSVQMGElkDBhIQAgYIAwYRFAQAABJVBAAAElkF
AAEBElkEAAASEAMAAAEECAASVQQIABJZBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNl
cHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzRhNTI0OGQxNDExZDRiZjk5NTIwYWFjZTkzNjA0
NTBjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTkAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC41ALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAACsMgAAAAAAAAAAAADGMgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuDIAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAy3j1GwAAAQDLePUbPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA0AGEANQAyADQAOABkADEANAAxADEAZAA0AGIAZgA5ADkANQAyADAAYQBhAGMAZQA5
ADMANgAwADQANQAwAGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwAxADUANwAuADMAMAA5ADIAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA0AGEANQAyADQAOABkADEANAAxADEAZAA0AGIAZgA5ADkANQAyADAAYQBhAGMAZQA5ADMA
NgAwADQANQAwAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAOQAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADQAYQA1ADIANAA4AGQAMQA0ADEAMQBkADQAYgBmADkAOQA1ADIAMABhAGEA
YwBlADkAMwA2ADAANAA1ADAAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA0AGEANQAyADQAOABkADEANAAxADEAZAA0AGIAZgA5ADkANQAyADAAYQBhAGMA
ZQA5ADMANgAwADQANQAwAGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcAMQA1ADcALgAzADAAOQAyADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMQA1ADcALgAzADAAOQAyADMAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA2DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Take STG and run out to Excel file"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{7BEEBAA4-0FAD-49DB-BBD2-39C87BD4C0DB}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Take STG and run out to Excel file"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Take STG and run out to Excel file\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Take STG and run out to Excel file\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Data Conversion.Inputs[Data Conversion Input].Columns[ImportDate]"
                      cachedDataType="dbDate"
                      cachedName="ImportDate"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Take STG and run out to Excel file\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Output].Columns[ImportDate_DT]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Output].Columns[ImportDate_DT]"
                      name="ImportDate_DT"
                      truncationRowDisposition="IgnoreFailure">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Take STG and run out to Excel file\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Take STG and run out to Excel file\Excel Destination"
              componentClassID="Microsoft.ExcelDestination"
              contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Excel Destination"
              name="Excel Destination"
              usesDispositions="true">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Take STG and run out to Excel file\Excel Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DocumentInventory_DEST]"
                  connectionManagerRefId="Package.ConnectionManagers[DocumentInventory_DEST]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Excel Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[ProgramID]"
                      cachedDataType="wstr"
                      cachedLength="20"
                      cachedName="ProgramID"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ProgramID]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProgramID]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[Enrollment_Package]"
                      cachedDataType="bool"
                      cachedName="Enrollment_Package"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Enrollment_Package]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Enrollment_Package]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[IsBeyondContract]"
                      cachedDataType="bool"
                      cachedName="IsBeyondContract"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[IsBeyondContract]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[IsBeyondContract]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[ATC_POA]"
                      cachedDataType="bool"
                      cachedName="ATC_POA"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ATC_POA]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ATC_POA]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[Credit_Pull_Auth]"
                      cachedDataType="bool"
                      cachedName="Credit_Pull_Auth"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Credit_Pull_Auth]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Credit_Pull_Auth]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[SPAA]"
                      cachedDataType="bool"
                      cachedName="SPAA"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SPAA]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SPAA]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[Docusign_Certificate]"
                      cachedDataType="bool"
                      cachedName="Docusign_Certificate"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Docusign_Certificate]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Docusign_Certificate]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[SalesAgent]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="SalesAgent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SalesAgent]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesAgent]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[SalesAgentManager]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="SalesAgentManager"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SalesAgentManager]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesAgentManager]" />
                    <inputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].Columns[ImportDate_DT]"
                      cachedDataType="date"
                      cachedName="ImportDate_DT"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ImportDate]"
                      lineageId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Output].Columns[ImportDate_DT]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ProgramID]"
                      dataType="wstr"
                      length="255"
                      name="ProgramID" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ImportDate]"
                      dataType="r8"
                      name="ImportDate" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SalesAgent]"
                      dataType="wstr"
                      length="255"
                      name="SalesAgent" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SalesAgentManager]"
                      dataType="wstr"
                      length="255"
                      name="SalesAgentManager" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Enrollment_Package]"
                      dataType="bool"
                      name="Enrollment_Package" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[IsBeyondContract]"
                      dataType="bool"
                      name="IsBeyondContract" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[ATC_POA]"
                      dataType="bool"
                      name="ATC_POA" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Credit_Pull_Auth]"
                      dataType="bool"
                      name="Credit_Pull_Auth" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[SPAA]"
                      dataType="bool"
                      name="SPAA" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input].ExternalColumns[Docusign_Certificate]"
                      dataType="bool"
                      name="Docusign_Certificate" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Take STG and run out to Excel file\Excel Destination.Outputs[Excel Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Excel Destination Error Output"
                  synchronousInputId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Take STG and run out to Excel file\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Take STG and run out to Excel file\Excel Destination.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Take STG and run out to Excel file\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[stg_ClearOne_MissingData]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Take STG and run out to Excel file\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
                  connectionManagerRefId="Package.ConnectionManagers[HOU-IT-RSTEWART\SQL2017.BF_Redshift_Staging]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProgramID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProgramID]"
                      length="20"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ProgramID]"
                      name="ProgramID"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ImportDate]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportDate]"
                      name="ImportDate"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Enrollment_Package]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Enrollment_Package]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Enrollment_Package]"
                      name="Enrollment_Package"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[IsBeyondContract]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[IsBeyondContract]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[IsBeyondContract]"
                      name="IsBeyondContract"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ATC_POA]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ATC_POA]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[ATC_POA]"
                      name="ATC_POA"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Credit_Pull_Auth]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Credit_Pull_Auth]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Credit_Pull_Auth]"
                      name="Credit_Pull_Auth"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SPAA]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SPAA]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SPAA]"
                      name="SPAA"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Docusign_Certificate]"
                      dataType="bool"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Docusign_Certificate]"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[Docusign_Certificate]"
                      name="Docusign_Certificate"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesAgent]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SalesAgent]"
                      length="50"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesAgent]"
                      name="SalesAgent"
                      truncationRowDisposition="IgnoreFailure" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesAgentManager]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SalesAgentManager]"
                      length="50"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].Columns[SalesAgentManager]"
                      name="SalesAgentManager"
                      truncationRowDisposition="IgnoreFailure" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ProgramID]"
                      dataType="wstr"
                      length="20"
                      name="ProgramID" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ImportDate]"
                      dataType="dbDate"
                      name="ImportDate" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Enrollment_Package]"
                      dataType="bool"
                      name="Enrollment_Package" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[IsBeyondContract]"
                      dataType="bool"
                      name="IsBeyondContract" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ATC_POA]"
                      dataType="bool"
                      name="ATC_POA" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Credit_Pull_Auth]"
                      dataType="bool"
                      name="Credit_Pull_Auth" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SPAA]"
                      dataType="bool"
                      name="SPAA" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[Docusign_Certificate]"
                      dataType="bool"
                      name="Docusign_Certificate" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SalesAgent]"
                      dataType="wstr"
                      length="50"
                      name="SalesAgent" />
                    <externalMetadataColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SalesAgentManager]"
                      dataType="wstr"
                      length="50"
                      name="SalesAgentManager" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProgramID]"
                      dataType="wstr"
                      length="20"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ProgramID]"
                      name="ProgramID" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ImportDate]"
                      dataType="dbDate"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ImportDate]"
                      name="ImportDate" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SalesAgent]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SalesAgent]"
                      name="SalesAgent" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SalesAgentManager]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SalesAgentManager]"
                      name="SalesAgentManager" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Enrollment_Package]"
                      dataType="bool"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Enrollment_Package]"
                      name="Enrollment_Package" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[IsBeyondContract]"
                      dataType="bool"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[IsBeyondContract]"
                      name="IsBeyondContract" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ATC_POA]"
                      dataType="bool"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ATC_POA]"
                      name="ATC_POA" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Credit_Pull_Auth]"
                      dataType="bool"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Credit_Pull_Auth]"
                      name="Credit_Pull_Auth" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SPAA]"
                      dataType="bool"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SPAA]"
                      name="SPAA" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Docusign_Certificate]"
                      dataType="bool"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[Docusign_Certificate]"
                      name="Docusign_Certificate" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Take STG and run out to Excel file.Paths[Data Conversion Output]"
              endId="Package\Take STG and run out to Excel file\Excel Destination.Inputs[Excel Destination Input]"
              name="Data Conversion Output"
              startId="Package\Take STG and run out to Excel file\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Take STG and run out to Excel file.Paths[OLE DB Source Output]"
              endId="Package\Take STG and run out to Excel file\Data Conversion.Inputs[Data Conversion Input]"
              name="OLE DB Source Output"
              startId="Package\Take STG and run out to Excel file\OLE DB Source.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{D1B51313-C7D4-4C53-A449-4279A11E50CB}"
      DTS:From="Package\Get Agent and Manager Data from Excel into STG"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Take STG and run out to Excel file" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2EB8AA24-3A53-418B-8106-9B1E236314F6}"
      DTS:From="Package\Clear STG for new inventory"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{8002A22E-8B09-458C-B64C-4BF0EDB27FEB}"
      DTS:From="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Get Agent and Manager Data from Excel into STG" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{684F4E1B-792F-4454-B089-D4794B6E47BE}"
      DTS:From="Package\Take STG and run out to Excel file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Send Mail thru Gmail" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="420,42"
          Id="Package\Clear STG for new inventory"
          TopLeft="144,42" />
        <NodeLayout
          Size="420,42"
          Id="Package\Get Agent and Manager Data from Excel into STG"
          TopLeft="144,143.5" />
        <NodeLayout
          Size="420,42"
          Id="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager"
          TopLeft="144,92.75" />
        <NodeLayout
          Size="420,42"
          Id="Package\Send Mail thru Gmail"
          TopLeft="144,245" />
        <NodeLayout
          Size="420,42"
          Id="Package\Take STG and run out to Excel file"
          TopLeft="144,194.25" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="144,170.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.4166666666667"
              Start="0,0"
              End="-7.5,39.4166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,35.4166666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,35.4166666666667"
                    Point2="-22.5,39.4166666666667"
                    Point3="-18.5,39.4166666666667" />
                  <mssgle:LineSegment
                    End="-7.5,39.4166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="144,63">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.0833333333333"
              Start="0,0"
              End="-7.5,45.0833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,41.0833333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,41.0833333333333"
                    Point2="-22.5,45.0833333333333"
                    Point3="-18.5,45.0833333333333" />
                  <mssgle:LineSegment
                    End="-7.5,45.0833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="144,119.416666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.4166666666667"
              Start="0,0"
              End="-7.5,39.4166666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,35.4166666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,35.4166666666667"
                    Point2="-22.5,39.4166666666667"
                    Point3="-18.5,39.4166666666667" />
                  <mssgle:LineSegment
                    End="-7.5,39.4166666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="144,220.916666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.0833333333333"
              Start="0,0"
              End="-7.5,45.0833333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5,0"
                    Point2="-22.5,0"
                    Point3="-22.5,4" />
                  <mssgle:LineSegment
                    End="-22.5,41.0833333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,41.0833333333333"
                    Point2="-22.5,45.0833333333333"
                    Point3="-18.5,45.0833333333333" />
                  <mssgle:LineSegment
                    End="-7.5,45.0833333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Get Agent and Manager Data from Excel into STG">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="113,42"
          Id="Package\Get Agent and Manager Data from Excel into STG\Lookup"
          TopLeft="109,154" />
        <NodeLayout
          Size="171,42"
          Id="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination"
          TopLeft="123,288" />
        <NodeLayout
          Size="139,42"
          Id="Package\Get Agent and Manager Data from Excel into STG\Excel Source"
          TopLeft="107,62" />
        <EdgeLayout
          Id="Package\Get Agent and Manager Data from Excel into STG.Paths[Lookup Match Output]"
          TopLeft="165.5,196">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43,92"
              Start="0,0"
              End="43,84.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42"
                    Point2="0,46"
                    Point3="4,46" />
                  <mssgle:LineSegment
                    End="39,46" />
                  <mssgle:CubicBezierSegment
                    Point1="39,46"
                    Point2="43,46"
                    Point3="43,50" />
                  <mssgle:LineSegment
                    End="43,84.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.69138671875,51,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Get Agent and Manager Data from Excel into STG.Paths[Excel Source Output]"
          TopLeft="176.5,104">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11,50"
              Start="0,0"
              End="-11,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21"
                    Point2="0,25"
                    Point3="-4,25" />
                  <mssgle:LineSegment
                    End="-7,25" />
                  <mssgle:CubicBezierSegment
                    Point1="-7,25"
                    Point2="-11,25"
                    Point3="-11,29" />
                  <mssgle:LineSegment
                    End="-11,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Get Agent and Manager Data from Excel into STG\Lookup">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[stg_AllPrograms]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Agent and Manager Data from Excel into STG\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Get Agent and Manager Data from Excel into STG\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="142,42"
          Id="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source"
          TopLeft="132,51" />
        <NodeLayout
          Size="171,42"
          Id="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination"
          TopLeft="137,152" />
        <EdgeLayout
          Id="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager.Paths[ODBC Source Output]"
          TopLeft="203,93">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.5,59"
              Start="0,0"
              End="19.5,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.5"
                    Point2="0,29.5"
                    Point3="4,29.5" />
                  <mssgle:LineSegment
                    End="15.5,29.5" />
                  <mssgle:CubicBezierSegment
                    Point1="15.5,29.5"
                    Point2="19.5,29.5"
                    Point3="19.5,33.5" />
                  <mssgle:LineSegment
                    End="19.5,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\ODBC Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Recreate List of All programs with Sales Agent and Sales Agent Manager\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Take STG and run out to Excel file">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="159,42"
          Id="Package\Take STG and run out to Excel file\Excel Destination"
          TopLeft="74,241" />
        <NodeLayout
          Size="156,42"
          Id="Package\Take STG and run out to Excel file\Data Conversion"
          TopLeft="82,142" />
        <NodeLayout
          Size="150,42"
          Id="Package\Take STG and run out to Excel file\OLE DB Source"
          TopLeft="80,49" />
        <EdgeLayout
          Id="Package\Take STG and run out to Excel file.Paths[OLE DB Source Output]"
          TopLeft="157.5,91">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Take STG and run out to Excel file.Paths[Data Conversion Output]"
          TopLeft="156.75,184">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Take STG and run out to Excel file\Excel Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Take STG and run out to Excel file\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>